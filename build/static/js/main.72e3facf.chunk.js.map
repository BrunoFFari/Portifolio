{"version":3,"sources":["components/navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","UIkit","use","Icons","react_default","a","createElement","className","uk-navbar","uk-toggle","uk-icon","href","id","uk-offcanvas","class","type","style","bottom","Component","App","navbar","src","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72e3facf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\n\nclass Navbar extends Component {\n\n    constructor(props){\n        super(props);\n        UIkit.use(Icons);\n    }\n\n    render(){\n        return(\n            <div className=\"uk-position-relative\">\n                <nav className=\"uk-navbar-container\" uk-navbar=\"dropbar: true; dropbar-mode: push\">\n\n                    <div className=\"uk-navbar-left\">\n                        <ul className=\"uk-navbar-nav\">\n                            <li>\n                                    <span uk-toggle=\"target: #offcanvas-reveal\" uk-icon=\"icon: menu; ratio: 1.5\"></span>\n                                    <strong> Bruno Farias</strong>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div className=\"uk-navbar-right\">\n                        <ul className=\"uk-navbar-nav\">\n                            <li><a href=\"#\"><span uk-icon=\"icon: facebook; ratio: 1\"></span></a> </li>\n                            <li><a href=\"#\"><span uk-icon=\"icon: linkedin; ratio: 1\"></span></a> </li>\n                            <li><a href=\"#\"><span uk-icon=\"icon: twitter; ratio: 1\"></span></a> </li>\n                            <li><a href=\"#\"><span uk-icon=\"icon: behance; ratio: 1\"></span></a> </li>\n                            <li><a href=\"#\"><span uk-icon=\"icon: github; ratio: 1\"></span></a> </li>\n                        </ul>\n                    </div>\n\n                </nav>\n\n                <div id=\"offcanvas-reveal\" uk-offcanvas=\"mode: reveal; overlay: true\">\n                    <div class=\"uk-offcanvas-bar\">\n\n                        <span class=\"uk-offcanvas-close\" type=\"button\" uk-icon=\"icon: close; ratio: 2\"></span>\n\n                        <h3>Bruno Farias</h3>\n\n                        <ul class=\"uk-nav uk-navbar-dropdown-nav\">\n                            <li><a href=\"#\">Skills</a></li>\n                            <li><a href=\"#\">Projetos</a></li>   \n                            <li><a href=\"#\">Contato</a></li>\n                            \n                        </ul>\n\n                        <div style={{ bottom: 0}}>\n                            <ul className=\"uk-navbar-nav\">\n                                <li><a href=\"#\"><span uk-icon=\"icon: facebook; ratio: 1\"></span></a> </li>\n                                <li><a href=\"#\"><span uk-icon=\"icon: linkedin; ratio: 1\"></span></a> </li>\n                                <li><a href=\"#\"><span uk-icon=\"icon: twitter; ratio: 1\"></span></a> </li>\n                                <li><a href=\"#\"><span uk-icon=\"icon: behance; ratio: 1\"></span></a> </li>\n                                <li><a href=\"#\"><span uk-icon=\"icon: github; ratio: 1\"></span></a> </li>\n                            </ul>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className=\"uk-navbar-dropbar\"></div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport 'uikit/dist/css/uikit.css';\nimport Navbar from './components/navbar';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Navbar/>\n        </header>\n        <session>\n          <article className=\"building\">\n            <h2>Em construção</h2>\n            <img src={'images/build.svg'}/>\n          </article>\n          \n        </session>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}